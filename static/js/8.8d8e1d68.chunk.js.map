{"version":3,"sources":["pages/Home/CreateForm/index.js","pages/Home/index.js","utils.js"],"names":["CreateForm","children","props","Form","useForm","form","labelCol","span","initialValues","games","type","style","maxWidth","margin","width","List","name","fields","add","remove","map","field","index","padding","background","marginBottom","border","Item","required","disabled","length","Option","value","noStyle","shouldUpdate","getFieldValue","placeholder","label","min","max","MinusCircleOutlined","cursor","fontSize","color","transition","onClick","icon","PlusOutlined","Home","React","useState","url","setUrl","display","textAlign","flexDirection","onValuesChange","_","values","window","location","encodeObj","href","copyToClipboard","message","success","encodeURIComponent","target","compareStrings","a","b","similarity","stringSimilarity","compareTwoStrings","toLowerCase","console","log","shiftChars","str","amount","split","code","charCodeAt","res","diff","String","fromCharCode","join","obj","encode","JSON","stringify","decodeObj","parse","decode","s","currChar","dict","data","out","phrase","i","push","lzw_encode","oldPhrase","currCode","charAt","lzw_decode","decodeURIComponent","el","document","createElement","body","appendChild","select","execCommand","removeChild"],"mappings":"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","file":"static/js/8.8d8e1d68.chunk.js","sourcesContent":["import React from \"react\"\nimport { Form, Input, Button, Select, InputNumber } from \"antd\"\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\"\n\nconst CreateForm = ({ children, ...props }) => {\n  const [form] = Form.useForm()\n\n  return (\n    <Form\n      {...props}\n      form={form}\n      labelCol={{ span: 10 }}\n      initialValues={{ games: [{ type: \"redirect\" }] }}\n      style={{ maxWidth: 500, margin: \"auto\", width: \"100%\" }}\n    >\n      <Form.List name=\"games\">\n        {(fields, { add, remove }) => (\n          <>\n            {fields.map((field, index) => (\n              <div style={{ padding: 20, background: \"#fefefe\", marginBottom: 20, border: \"1px solid #f0f0f0\", width: \"100%\" }} key={index}>\n                <Form.Item {...field} required={false} name={[field.name, \"type\"]}>\n                  <Select style={{ width: \"100%\" }} disabled={index === fields.length - 1}>\n                    <Select.Option value=\"question\">Question</Select.Option>\n                    <Select.Option value=\"pokemonTrivia\">Pokemon Trivia</Select.Option>\n                    <Select.Option value=\"simonSays\">Simon Says</Select.Option>\n                    <Select.Option value=\"buttonClicks\">Button Clicks</Select.Option>\n                    <Select.Option value=\"qrScan\">QRScan</Select.Option>\n                    <Select.Option value=\"redirect\">Redirect</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item noStyle shouldUpdate={true}>\n                  {({ getFieldValue }) => {\n                    return getFieldValue([\"games\", field.name, \"type\"]) === \"question\" ? (\n                      <>\n                        <Form.Item name={[field.name, \"question\"]}>\n                          <Input placeholder=\"Your question here\" />\n                        </Form.Item>\n                        <Form.Item name={[field.name, \"hint\"]}>\n                          <Input placeholder=\"Your hits here\" />\n                        </Form.Item>\n                        <Form.Item name={[field.name, \"answers\"]}>\n                          <Input placeholder=\"Comma separated answers\" />\n                        </Form.Item>\n                      </>\n                    ) : null\n                  }}\n                </Form.Item>\n                <Form.Item noStyle shouldUpdate={true}>\n                  {({ getFieldValue }) => {\n                    return getFieldValue([\"games\", field.name, \"type\"]) === \"simonSays\" ? (\n                      <>\n                        <Form.Item label={\"Rounds to win\"} name={[field.name, \"rounds\"]}>\n                          <InputNumber min={2} max={100} placeholder=\"6\" />\n                        </Form.Item>\n                      </>\n                    ) : null\n                  }}\n                </Form.Item>\n                <Form.Item noStyle shouldUpdate={true}>\n                  {({ getFieldValue }) => {\n                    return getFieldValue([\"games\", field.name, \"type\"]) === \"qrScan\" ? (\n                      <Form.Item label={\"QR Match Value\"} name={[field.name, \"answer\"]}>\n                        <Input placeholder=\"The value to Match\" />\n                        <small>Create your QR with any online generator</small>\n                      </Form.Item>\n                    ) : null\n                  }}\n                </Form.Item>\n                <Form.Item noStyle shouldUpdate={true}>\n                  {({ getFieldValue }) => {\n                    return getFieldValue([\"games\", field.name, \"type\"]) === \"buttonClicks\" ? (\n                      <Form.Item label={\"Rounds to win\"} name={[field.name, \"clicks\"]}>\n                        <InputNumber min={2} max={10000} placeholder=\"20\" />\n                      </Form.Item>\n                    ) : null\n                  }}\n                </Form.Item>\n                <Form.Item noStyle shouldUpdate={true}>\n                  {({ getFieldValue }) => {\n                    return getFieldValue([\"games\", field.name, \"type\"]) === \"redirect\" ? (\n                      <>\n                        <Form.Item name={[field.name, \"url\"]}>\n                          <Input type=\"url\" placeholder=\"Your URL here\" />\n                        </Form.Item>\n                      </>\n                    ) : null\n                  }}\n                </Form.Item>\n                {index < fields.length - 1 && (\n                  <MinusCircleOutlined\n                    style={{\n                      margin: \"8px\",\n                      cursor: \"pointer\",\n                      fontSize: \"24px\",\n                      color: \"#999\",\n                      transition: \"all 0.3s\",\n                    }}\n                    onClick={() => remove(field.name)}\n                  />\n                )}\n              </div>\n            ))}\n            <Form.Item>\n              <Button type=\"dashed\" onClick={() => add({}, fields.length - 1)} icon={<PlusOutlined />}>\n                Add Game\n              </Button>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n      <Form.Item>{children}</Form.Item>\n    </Form>\n  )\n}\n\nexport default CreateForm\n","import React from \"react\"\nimport { encodeObj, copyToClipboard } from \"../../utils\"\nimport { Button, message } from \"antd\"\nimport CreateForm from \"./CreateForm\"\n\nconst Home = () => {\n  const [url, setUrl] = React.useState(\"\")\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        padding: \"20px\",\n        textAlign: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <CreateForm\n        onValuesChange={(_, values) => {\n          setUrl(window.location + encodeObj(values.games))\n        }}\n      >\n        {!!url && <Button href={url}>GO</Button>}\n        {!!url && (\n          <Button\n            onClick={() => {\n              copyToClipboard(url)\n              message.success(\"URL Copied\")\n            }}\n          >\n            Copy to Clipboard\n          </Button>\n        )}\n        {!!url && (\n          <Button href={`https://tinyurl.com/create.php?url=${encodeURIComponent(url)}`} target=\"_blank\" children=\"Make TinyURL!\" />\n        )}\n      </CreateForm>\n    </div>\n  )\n}\n\nexport default Home\n","import stringSimilarity from \"string-similarity\"\n\nexport const compareStrings = (a, b) => {\n  const similarity = stringSimilarity.compareTwoStrings(b.toLowerCase(), a.toLowerCase())\n  console.log(similarity)\n  return similarity\n}\n\nexport const shiftChars = (str, amount, min, max) => {\n  return str\n    .split(\"\")\n    .map((a) => {\n      const code = a.charCodeAt(0)\n      if (code >= min && code <= max) {\n        let res = code + amount\n        const diff = max - min\n        if (res > max) {\n          res -= diff + 1\n        } else if (res < min) {\n          res += diff + 1\n        }\n        return String.fromCharCode(res)\n      }\n      return a\n    })\n    .join(\"\")\n}\n\nexport const encodeObj = (obj) => encode(JSON.stringify(obj))\nexport const decodeObj = (str) => JSON.parse(decode(str))\n\nexport const encode = (str) => {\n  str = shiftChars(str, 1, 97, 122)\n  str = shiftChars(str, 5, 60, 90)\n  str = lzw_encode(str)\n  str = encodeURIComponent(str)\n  return str\n}\n\nexport const decode = (str) => {\n  str = decodeURIComponent(str)\n  str = lzw_decode(str)\n  str = shiftChars(str, -5, 60, 90)\n  str = shiftChars(str, -1, 97, 122)\n  return str\n}\n\nexport const copyToClipboard = (str) => {\n  const el = document.createElement(\"textarea\")\n  el.value = str\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand(\"copy\")\n  document.body.removeChild(el)\n}\n\n// LZW-compress a string\nfunction lzw_encode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var out = []\n  var currChar\n  var phrase = data[0]\n  var code = 256\n  for (let i = 1; i < data.length; i++) {\n    currChar = data[i]\n    if (dict[phrase + currChar] != null) {\n      phrase += currChar\n    } else {\n      out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n      dict[phrase + currChar] = code\n      code++\n      phrase = currChar\n    }\n  }\n  out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n  for (let i = 0; i < out.length; i++) {\n    out[i] = String.fromCharCode(out[i])\n  }\n  return out.join(\"\")\n}\n\n// Decompress an LZW-encoded string\nfunction lzw_decode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var currChar = data[0]\n  var oldPhrase = currChar\n  var out = [currChar]\n  var code = 256\n  var phrase\n  for (var i = 1; i < data.length; i++) {\n    var currCode = data[i].charCodeAt(0)\n    if (currCode < 256) {\n      phrase = data[i]\n    } else {\n      phrase = dict[currCode] ? dict[currCode] : oldPhrase + currChar\n    }\n    out.push(phrase)\n    currChar = phrase.charAt(0)\n    dict[code] = oldPhrase + currChar\n    code++\n    oldPhrase = phrase\n  }\n  return out.join(\"\")\n}\n"],"sourceRoot":""}