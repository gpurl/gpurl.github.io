{"version":3,"sources":["pages/Game/Nipple/index.js"],"names":["Nipple","props","scene","useRef","engine","Engine","create","useEffect","cw","document","body","clientWidth","ch","clientHeight","render","Render","element","current","options","width","height","wireframes","background","ctrX","ctrY","backNipple","Bodies","polygon","nippleSize","isSensor","isStatic","fillStyle","nippleBase","finger","density","nipple","anchor","x","y","elastic","Constraint","pointA","bodyB","stiffness","type","lineWidth","visible","strokeStyle","mouse","Mouse","canvas","Events","on","position","Body","setPosition","World","add","world","run","stop","clear","remove","context","textures","ref","style"],"mappings":"+HAiHeA,UA9Gf,SAAgBC,GACd,IAAMC,EAAQC,mBACRC,EAASD,iBAAOE,SAAOC,UAqG7B,OAnGAC,qBAAU,WACR,IAAMC,EAAKC,SAASC,KAAKC,YACnBC,EAAKH,SAASC,KAAKG,aAEnBC,EAASC,SAAOT,OAAO,CAC3BU,QAASd,EAAMe,QACfb,OAAQA,EAAOa,QACfC,QAAS,CACPC,MAAOX,EACPY,OAAQR,EACRS,YAAY,EACZC,WAAY,aAIVC,EAAOf,EAAK,EACZgB,EAAOZ,EAAK,EAWda,EAAaC,SAAOC,QAAQJ,EAAMC,EAAM,GAAII,IAPtB,CACxBC,UAAU,EACVC,UAAU,EACVhB,OAAQ,CACNiB,UAAW,aAWXC,EAAaN,SAAOC,QAAQJ,EAAMC,EAAM,EAjBzB,GAUK,CACtBK,UAAU,EACVC,UAAU,EACVhB,OAAQ,CACNiB,UAAW,aAYXE,EAASP,SAAOC,QAAQ,EAAG,EAAG,EAAGC,GAPf,CACpBM,QAAS,IACTJ,UAAU,EACVhB,OAAQ,CACNiB,UAAW,iBAWXI,EAAST,SAAOC,QAAQJ,EAAMC,EAAM,EAlCrB,GA4BC,CAClBU,QAAS,KACTpB,OAAQ,CACNiB,UAAW,aAIXK,EAAS,CAAEC,EAAGd,EAAMe,EAAGd,GACvBe,EAAUC,aAAWlC,OAAO,CAC9BmC,OAAQL,EACRM,MAAOP,EACPQ,UAAW,IACX7B,OAAQ,CACN8B,KAAM,OACNC,UAAWjB,GACXkB,SAAS,EACTC,YAAa,aAKbC,EAAQC,QAAM3C,OAAOQ,EAAOoC,QAqBhC,OAnBAC,SAAOC,GAAGhD,EAAOa,QAAS,eAAe,WAClC+B,EAAMK,SAAShB,GAIpBiB,OAAKC,YAAYtB,EAAQ,CACvBI,EAAGW,EAAMK,SAAShB,EAClBC,EAAGU,EAAMK,SAASf,OAKtBxB,EAAOkC,MAAQA,EAEfQ,QAAMC,IAAIrD,EAAOa,QAAQyC,MAAO,CAACjC,EAAYO,EAAYG,EAAQI,EAASN,IAE1E5B,SAAOsD,IAAIvD,EAAOa,SAClBF,SAAO4C,IAAI7C,GAEJ,WACLC,SAAO6C,KAAK9C,GACZ0C,QAAMK,MAAMzD,EAAOa,QAAQyC,OAC3BrD,SAAOwD,MAAMzD,EAAOa,SACpBH,EAAOoC,OAAOY,SACdhD,EAAOoC,OAAS,KAChBpC,EAAOiD,QAAU,KACjBjD,EAAOkD,SAAW,MAEnB,IAGD,8BACE,qBAAKC,IAAK/D,EAAOgE,MAAO,CAAE/C,MAAO,OAAQC,OAAQ","file":"static/js/11.67d360b4.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport { Engine, Render, Bodies, World, Constraint, Mouse, Events, Body } from \"matter-js\"\n\nfunction Nipple(props) {\n  const scene = useRef()\n  const engine = useRef(Engine.create())\n\n  useEffect(() => {\n    const cw = document.body.clientWidth\n    const ch = document.body.clientHeight\n\n    const render = Render.create({\n      element: scene.current,\n      engine: engine.current,\n      options: {\n        width: cw,\n        height: ch,\n        wireframes: false,\n        background: \"#ffecd8\",\n      },\n    })\n\n    const ctrX = cw / 2\n    const ctrY = ch / 2\n\n    const nippleSize = 30\n\n    const backNippleOptions = {\n      isSensor: true,\n      isStatic: true,\n      render: {\n        fillStyle: \"#FFD8D8\",\n      },\n    }\n    var backNipple = Bodies.polygon(ctrX, ctrY, 12, nippleSize * 4, backNippleOptions)\n    var nippleBaseOptions = {\n      isSensor: true,\n      isStatic: true,\n      render: {\n        fillStyle: \"#ffbfbf\",\n      },\n    }\n    var nippleBase = Bodies.polygon(ctrX, ctrY, 8, nippleSize, nippleBaseOptions)\n\n    const fingerOptions = {\n      density: 0.02,\n      isStatic: true,\n      render: {\n        fillStyle: \"transparent\",\n      },\n    }\n    var finger = Bodies.polygon(0, 0, 8, nippleSize / 2, fingerOptions)\n\n    var nippleOptions = {\n      density: 0.004,\n      render: {\n        fillStyle: \"#ffbfbf\",\n      },\n    }\n    var nipple = Bodies.polygon(ctrX, ctrY, 8, nippleSize, nippleOptions)\n    var anchor = { x: ctrX, y: ctrY }\n    var elastic = Constraint.create({\n      pointA: anchor,\n      bodyB: nipple,\n      stiffness: 0.02,\n      render: {\n        type: \"line\",\n        lineWidth: nippleSize * 1.9,\n        visible: true,\n        strokeStyle: \"#ffbfbf\",\n      },\n    })\n\n    // add mouse control\n    var mouse = Mouse.create(render.canvas)\n\n    Events.on(engine.current, \"afterUpdate\", function () {\n      if (!mouse.position.x) {\n        return\n      }\n\n      Body.setPosition(finger, {\n        x: mouse.position.x,\n        y: mouse.position.y,\n      })\n    })\n\n    // keep the mouse in sync with rendering\n    render.mouse = mouse\n\n    World.add(engine.current.world, [backNipple, nippleBase, nipple, elastic, finger])\n\n    Engine.run(engine.current)\n    Render.run(render)\n\n    return () => {\n      Render.stop(render)\n      World.clear(engine.current.world)\n      Engine.clear(engine.current)\n      render.canvas.remove()\n      render.canvas = null\n      render.context = null\n      render.textures = {}\n    }\n  }, [])\n\n  return (\n    <div>\n      <div ref={scene} style={{ width: \"100%\", height: \"100%\" }} />\n    </div>\n  )\n}\n\nexport default Nipple\n"],"sourceRoot":""}