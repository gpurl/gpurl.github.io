{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","pages/Game/index.js","utils.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/string-similarity/src/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["_toArray","arr","arrayWithHoles","iter","Symbol","iterator","Object","Array","from","unsupportedIterableToArray","nonIterableRest","activities","question","lazy","simonSays","buttonClicks","pokemonTrivia","qrScan","redirect","props","window","location","replace","url","Game","code","useParams","history","useHistory","useMemo","decodeObj","step","next","Component","type","onDone","encodeObj","push","compareStrings","a","b","similarity","stringSimilarity","compareTwoStrings","toLowerCase","console","log","shiftChars","str","amount","min","max","split","map","charCodeAt","res","diff","String","fromCharCode","join","obj","encode","JSON","stringify","parse","decode","s","currChar","dict","data","out","phrase","i","length","lzw_encode","encodeURIComponent","oldPhrase","currCode","charAt","lzw_decode","decodeURIComponent","copyToClipboard","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","_defineProperty","key","defineProperty","enumerable","configurable","writable","_arrayWithHoles","isArray","_nonIterableRest","TypeError","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","first","second","firstBigrams","Map","bigram","substring","count","has","get","set","intersectionSize","module","exports","findBestMatch","mainString","targetStrings","find","areArgsValid","Error","ratings","bestMatchIndex","currentTargetString","currentRating","target","rating","bestMatch","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/6.18598b49.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import { lazy, useMemo } from \"react\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { encodeObj, decodeObj } from \"../../utils\"\n\nconst activities = {\n  question: lazy(() => import(\"./Question\")),\n  simonSays: lazy(() => import(\"./SimonSays\")),\n  buttonClicks: lazy(() => import(\"./ButtonClicks\")),\n  pokemonTrivia: lazy(() => import(\"./PokemonTrivia\")),\n  qrScan: lazy(() => import(\"./QRScan\")),\n  redirect: (props) => {\n    window.location.replace(props.url)\n    return null\n  },\n}\n\nconst Game = () => {\n  const { code } = useParams()\n  const history = useHistory()\n  const [step, ...next] = useMemo(() => decodeObj(code), [code])\n\n  const Component = activities[step.type]\n\n  const handleDone = () => {\n    const url = encodeObj(next)\n    history.push(`/${url}`)\n  }\n\n  return <Component {...step} onDone={handleDone} />\n}\n\nexport default Game\n","import stringSimilarity from \"string-similarity\"\n\nexport const compareStrings = (a, b) => {\n  const similarity = stringSimilarity.compareTwoStrings(b.toLowerCase(), a.toLowerCase())\n  console.log(similarity)\n  return similarity\n}\n\nexport const shiftChars = (str, amount, min, max) => {\n  return str\n    .split(\"\")\n    .map((a) => {\n      const code = a.charCodeAt(0)\n      if (code >= min && code <= max) {\n        let res = code + amount\n        const diff = max - min\n        if (res > max) {\n          res -= diff + 1\n        } else if (res < min) {\n          res += diff + 1\n        }\n        return String.fromCharCode(res)\n      }\n      return a\n    })\n    .join(\"\")\n}\n\nexport const encodeObj = (obj) => encode(JSON.stringify(obj))\nexport const decodeObj = (str) => JSON.parse(decode(str))\n\nexport const encode = (str) => {\n  str = shiftChars(str, 1, 97, 122)\n  str = shiftChars(str, 5, 60, 90)\n  str = lzw_encode(str)\n  str = encodeURIComponent(str)\n  return str\n}\n\nexport const decode = (str) => {\n  str = decodeURIComponent(str)\n  str = lzw_decode(str)\n  str = shiftChars(str, -5, 60, 90)\n  str = shiftChars(str, -1, 97, 122)\n  return str\n}\n\nexport const copyToClipboard = (str) => {\n  const el = document.createElement(\"textarea\")\n  el.value = str\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand(\"copy\")\n  document.body.removeChild(el)\n}\n\n// LZW-compress a string\nfunction lzw_encode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var out = []\n  var currChar\n  var phrase = data[0]\n  var code = 256\n  for (let i = 1; i < data.length; i++) {\n    currChar = data[i]\n    if (dict[phrase + currChar] != null) {\n      phrase += currChar\n    } else {\n      out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n      dict[phrase + currChar] = code\n      code++\n      phrase = currChar\n    }\n  }\n  out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n  for (let i = 0; i < out.length; i++) {\n    out[i] = String.fromCharCode(out[i])\n  }\n  return out.join(\"\")\n}\n\n// Decompress an LZW-encoded string\nfunction lzw_decode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var currChar = data[0]\n  var oldPhrase = currChar\n  var out = [currChar]\n  var code = 256\n  var phrase\n  for (var i = 1; i < data.length; i++) {\n    var currCode = data[i].charCodeAt(0)\n    if (currCode < 256) {\n      phrase = data[i]\n    } else {\n      phrase = dict[currCode] ? dict[currCode] : oldPhrase + currChar\n    }\n    out.push(phrase)\n    currChar = phrase.charAt(0)\n    dict[code] = oldPhrase + currChar\n    code++\n    oldPhrase = phrase\n  }\n  return out.join(\"\")\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = {\n\tcompareTwoStrings:compareTwoStrings,\n\tfindBestMatch:findBestMatch\n};\n\nfunction compareTwoStrings(first, second) {\n\tfirst = first.replace(/\\s+/g, '')\n\tsecond = second.replace(/\\s+/g, '')\n\n\tif (first === second) return 1; // identical or empty\n\tif (first.length < 2 || second.length < 2) return 0; // if either is a 0-letter or 1-letter string\n\n\tlet firstBigrams = new Map();\n\tfor (let i = 0; i < first.length - 1; i++) {\n\t\tconst bigram = first.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram) + 1\n\t\t\t: 1;\n\n\t\tfirstBigrams.set(bigram, count);\n\t};\n\n\tlet intersectionSize = 0;\n\tfor (let i = 0; i < second.length - 1; i++) {\n\t\tconst bigram = second.substring(i, i + 2);\n\t\tconst count = firstBigrams.has(bigram)\n\t\t\t? firstBigrams.get(bigram)\n\t\t\t: 0;\n\n\t\tif (count > 0) {\n\t\t\tfirstBigrams.set(bigram, count - 1);\n\t\t\tintersectionSize++;\n\t\t}\n\t}\n\n\treturn (2.0 * intersectionSize) / (first.length + second.length - 2);\n}\n\nfunction findBestMatch(mainString, targetStrings) {\n\tif (!areArgsValid(mainString, targetStrings)) throw new Error('Bad arguments: First argument should be a string, second should be an array of strings');\n\t\n\tconst ratings = [];\n\tlet bestMatchIndex = 0;\n\n\tfor (let i = 0; i < targetStrings.length; i++) {\n\t\tconst currentTargetString = targetStrings[i];\n\t\tconst currentRating = compareTwoStrings(mainString, currentTargetString)\n\t\tratings.push({target: currentTargetString, rating: currentRating})\n\t\tif (currentRating > ratings[bestMatchIndex].rating) {\n\t\t\tbestMatchIndex = i\n\t\t}\n\t}\n\t\n\t\n\tconst bestMatch = ratings[bestMatchIndex]\n\t\n\treturn { ratings: ratings, bestMatch: bestMatch, bestMatchIndex: bestMatchIndex };\n}\n\nfunction areArgsValid(mainString, targetStrings) {\n\tif (typeof mainString !== 'string') return false;\n\tif (!Array.isArray(targetStrings)) return false;\n\tif (!targetStrings.length) return false;\n\tif (targetStrings.find( function (s) { return typeof s !== 'string'})) return false;\n\treturn true;\n}\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}