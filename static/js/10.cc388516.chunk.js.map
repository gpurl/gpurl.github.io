{"version":3,"sources":["pages/Home/CreateForm/styles.module.scss","pages/Home/styles.module.scss","pages/Home/CreateForm/index.js","pages/Home/index.js","utils.js"],"names":["module","exports","options","value","label","CreateForm","children","props","Form","useForm","form","labelCol","span","initialValues","games","type","url","className","css","container","List","name","fields","add","remove","map","field","index","game","MinusCircleTwoTone","twoToneColor","removeBtn","onClick","Item","required","style","width","disabled","Option","noStyle","shouldUpdate","getFieldValue","placeholder","min","max","hasFeedback","rules","message","prefix","SmileOutlined","length","image","Empty","PRESENTED_IMAGE_SIMPLE","justifyContent","wrap","align","shape","icon","PlusOutlined","Home","React","useState","setUrl","plain","onValuesChange","_","values","window","location","encodeObj","href","target","SmileTwoTone","copyToClipboard","encodeURIComponent","compareStrings","a","b","similarity","stringSimilarity","compareTwoStrings","toLowerCase","console","log","shiftChars","str","amount","split","code","charCodeAt","res","diff","String","fromCharCode","join","obj","encode","JSON","stringify","decodeObj","parse","decode","s","currChar","dict","data","out","phrase","i","push","lzw_encode","oldPhrase","currCode","charAt","lzw_decode","decodeURIComponent","el","document","createElement","body","appendChild","select","execCommand","removeChild","success"],"mappings":"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","file":"static/js/10.cc388516.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3uwDS\",\"game\":\"styles_game__1Vw79\",\"removeBtn\":\"styles_removeBtn__Jpw8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__ttgLw\"};","import React from \"react\"\nimport { Form, Input, Button, Select, InputNumber, Empty, Divider, Space } from \"antd\"\nimport { MinusCircleTwoTone, PlusOutlined, SmileOutlined } from \"@ant-design/icons\"\nimport QueueAnim from \"rc-queue-anim\"\nimport css from \"./styles.module.scss\"\n\nconst options = [\n  // { value: \"redirect\", label: \"Redirect\" },\n  { value: \"pokemonTrivia\", label: \"Pokemon Trivia\" },\n  { value: \"simonSays\", label: \"Simon Says\" },\n  { value: \"buttonClicks\", label: \"Button Clicks\" },\n  { value: \"qrScan\", label: \"QR Scan\" },\n  { value: \"question\", label: \"Question\" },\n]\n\nconst CreateForm = ({ children, ...props }) => {\n  const [form] = Form.useForm()\n  const initialValues = { games: [{ type: \"redirect\", url: \"https://gpurl.github.io\" }] }\n\n  return (\n    <Form {...props} form={form} labelCol={{ span: 10 }} initialValues={initialValues} className={css.container}>\n      <Form.List name=\"games\">\n        {(fields, { add, remove }) => (\n          <>\n            <QueueAnim>\n              {fields.map((field, index) => (\n                <div className={css.game} key={index}>\n                  {index > 0 && <MinusCircleTwoTone twoToneColor=\"#e63946\" className={css.removeBtn} onClick={() => remove(field.name)} />}\n                  <Form.Item {...field} required={false} name={[field.name, \"type\"]}>\n                    <Select style={{ width: \"100%\" }} disabled={index === 0}>\n                      {options.map(({ value, label }) => (\n                        <Select.Option value={value} key={value}>\n                          {label}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                  <Form.Item noStyle shouldUpdate={true}>\n                    {({ getFieldValue }) => {\n                      return getFieldValue([\"games\", field.name, \"type\"]) === \"question\" ? (\n                        <>\n                          <Form.Item name={[field.name, \"question\"]}>\n                            <Input placeholder=\"Your question here\" />\n                          </Form.Item>\n                          <Form.Item name={[field.name, \"hint\"]}>\n                            <Input placeholder=\"Your hint here\" />\n                          </Form.Item>\n                          <Form.Item name={[field.name, \"answers\"]}>\n                            <Input placeholder=\"Comma separated answers\" />\n                          </Form.Item>\n                        </>\n                      ) : null\n                    }}\n                  </Form.Item>\n                  <Form.Item noStyle shouldUpdate={true}>\n                    {({ getFieldValue }) => {\n                      return getFieldValue([\"games\", field.name, \"type\"]) === \"simonSays\" ? (\n                        <>\n                          <Form.Item label={\"Rounds to win\"} name={[field.name, \"rounds\"]}>\n                            <InputNumber min={2} max={100} placeholder=\"6\" />\n                          </Form.Item>\n                        </>\n                      ) : null\n                    }}\n                  </Form.Item>\n                  <Form.Item noStyle shouldUpdate={true}>\n                    {({ getFieldValue }) => {\n                      return getFieldValue([\"games\", field.name, \"type\"]) === \"qrScan\" ? (\n                        <Form.Item label={\"QR Match Value\"} name={[field.name, \"answer\"]}>\n                          <Input placeholder=\"The value to Match\" />\n                          <small>Create your QR with any online generator</small>\n                        </Form.Item>\n                      ) : null\n                    }}\n                  </Form.Item>\n                  <Form.Item noStyle shouldUpdate={true}>\n                    {({ getFieldValue }) => {\n                      return getFieldValue([\"games\", field.name, \"type\"]) === \"buttonClicks\" ? (\n                        <Form.Item label={\"Clicks to win\"} name={[field.name, \"clicks\"]}>\n                          <InputNumber min={2} max={10000} placeholder=\"50\" />\n                        </Form.Item>\n                      ) : null\n                    }}\n                  </Form.Item>\n                  <Form.Item noStyle shouldUpdate={true}>\n                    {({ getFieldValue }) => {\n                      return getFieldValue([\"games\", field.name, \"type\"]) === \"redirect\" ? (\n                        <>\n                          <Form.Item\n                            hasFeedback\n                            name={[field.name, \"url\"]}\n                            rules={[\n                              {\n                                type: \"url\",\n                                message: \"The input is not valid URL!\",\n                              },\n                              {\n                                required: true,\n                                message: \"Please input a URL!\",\n                              },\n                            ]}\n                          >\n                            <Input prefix={<SmileOutlined />} type=\"url\" placeholder=\"Your URL here\" />\n                          </Form.Item>\n                        </>\n                      ) : null\n                    }}\n                  </Form.Item>\n                </div>\n              ))}\n            </QueueAnim>\n            {fields.length === 1 && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n            <Form.Item>\n              <Space style={{ justifyContent: \"center\" }} wrap align=\"center\">\n                {options.map(({ value, label }) => (\n                  <Button type=\"dashed\" shape=\"round\" onClick={() => add({ type: value })} icon={<PlusOutlined />}>\n                    {label}\n                  </Button>\n                ))}\n              </Space>\n            </Form.Item>\n          </>\n        )}\n      </Form.List>\n      <Form.Item>{children}</Form.Item>\n    </Form>\n  )\n}\n\nexport default CreateForm\n","import React from \"react\"\nimport { encodeObj, copyToClipboard } from \"../../utils\"\nimport { Button, Space, Divider } from \"antd\"\nimport { SmileTwoTone } from \"@ant-design/icons\"\nimport CreateForm from \"./CreateForm\"\nimport css from \"./styles.module.scss\"\n\nconst Home = () => {\n  const [url, setUrl] = React.useState(\"\")\n  return (\n    <div className={css.container}>\n      <h1>Game Protected URL</h1>\n      <Divider plain>Protect your urls in a funny way</Divider>\n      <CreateForm onValuesChange={(_, values) => setUrl(window.location + encodeObj(values.games))}>\n        <Divider plain>Are you done?</Divider>\n        <Space>\n          <Button href={url} target=\"_blank\">\n            <SmileTwoTone />\n            Try\n          </Button>\n          <span>or</span>\n          <Button onClick={() => copyToClipboard(url)}>Copy URL</Button>\n          <span>or</span>\n          <Button href={`https://tinyurl.com/create.php?url=${encodeURIComponent(url)}`} target=\"_blank\" children=\"Tiny URL\" />\n        </Space>\n      </CreateForm>\n    </div>\n  )\n}\n\nexport default Home\n","import stringSimilarity from \"string-similarity\"\nimport { message } from \"antd\"\n\nexport const compareStrings = (a, b) => {\n  const similarity = stringSimilarity.compareTwoStrings(b.toLowerCase(), a.toLowerCase())\n  console.log(similarity)\n  return similarity\n}\n\nexport const shiftChars = (str, amount, min, max) => {\n  return str\n    .split(\"\")\n    .map((a) => {\n      const code = a.charCodeAt(0)\n      if (code >= min && code <= max) {\n        let res = code + amount\n        const diff = max - min\n        if (res > max) {\n          res -= diff + 1\n        } else if (res < min) {\n          res += diff + 1\n        }\n        return String.fromCharCode(res)\n      }\n      return a\n    })\n    .join(\"\")\n}\n\nexport const encodeObj = (obj) => encode(JSON.stringify(obj))\nexport const decodeObj = (str) => JSON.parse(decode(str))\n\nexport const encode = (str) => {\n  str = shiftChars(str, 1, 97, 122)\n  str = shiftChars(str, 5, 60, 90)\n  str = lzw_encode(str)\n  str = encodeURIComponent(str)\n  return str\n}\n\nexport const decode = (str) => {\n  str = decodeURIComponent(str)\n  str = lzw_decode(str)\n  str = shiftChars(str, -5, 60, 90)\n  str = shiftChars(str, -1, 97, 122)\n  return str\n}\n\nexport const copyToClipboard = (str) => {\n  const el = document.createElement(\"textarea\")\n  el.value = str\n  document.body.appendChild(el)\n  el.select()\n  document.execCommand(\"copy\")\n  document.body.removeChild(el)\n  message.success(\"URL Copied\")\n}\n\n// LZW-compress a string\nfunction lzw_encode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var out = []\n  var currChar\n  var phrase = data[0]\n  var code = 256\n  for (let i = 1; i < data.length; i++) {\n    currChar = data[i]\n    if (dict[phrase + currChar] != null) {\n      phrase += currChar\n    } else {\n      out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n      dict[phrase + currChar] = code\n      code++\n      phrase = currChar\n    }\n  }\n  out.push(phrase.length > 1 ? dict[phrase] : phrase.charCodeAt(0))\n  for (let i = 0; i < out.length; i++) {\n    out[i] = String.fromCharCode(out[i])\n  }\n  return out.join(\"\")\n}\n\n// Decompress an LZW-encoded string\nfunction lzw_decode(s) {\n  var dict = {}\n  var data = (s + \"\").split(\"\")\n  var currChar = data[0]\n  var oldPhrase = currChar\n  var out = [currChar]\n  var code = 256\n  var phrase\n  for (var i = 1; i < data.length; i++) {\n    var currCode = data[i].charCodeAt(0)\n    if (currCode < 256) {\n      phrase = data[i]\n    } else {\n      phrase = dict[currCode] ? dict[currCode] : oldPhrase + currChar\n    }\n    out.push(phrase)\n    currChar = phrase.charAt(0)\n    dict[code] = oldPhrase + currChar\n    code++\n    oldPhrase = phrase\n  }\n  return out.join(\"\")\n}\n"],"sourceRoot":""}